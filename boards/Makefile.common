# Remove built-in rules and variables
# n.b. no-op for make --version < 4.0
MAKEFLAGS += -r
MAKEFLAGS += -R

TOOLCHAIN ?= armeb-eabi

CC        := $(TOOLCHAIN)-gcc
AR        := $(TOOLCHAIN)-ar
SIZE      ?= $(TOOLCHAIN)-size
CFLAGS    := -O2 -march=armv7-r

export CARGO_INCREMENTAL=0

# Used mainly to build compiler-builtins
US:= _
DASH:= -
TARGET_UN := $(subst $(DASH),$(US),$(TARGET))
export CC_$(TARGET_UN) = $(CC)
export LD_$(TARGET_UN) = $(CC)
export AR_$(TARGET_UN) = $(AR)
ifdef SOFTFLOAT
export CFLAGS_$(TARGET_UN) = $(CFLAGS)
else
export CFLAGS_$(TARGET_UN) = $(CFLAGS) -mfpu=vfpv3-d16
endif


export RUST_TARGET_PATH = $(PWD)

ifndef PLATFORM
$(error Required make vairable PLATFORM is not defined)
endif

# If environment variable V is non-empty, be verbose
ifneq ($(V),)
Q=
VERBOSE = --verbose
else
Q=@
VERBOSE =
endif

.PHONY: all
all: target/$(TARGET)/release/$(PLATFORM)

debug: target/$(TARGET)/debug/$(PLATFORM)

target:
	@mkdir -p target

.PHONY: target/$(TARGET)/release/$(PLATFORM)
target/$(TARGET)/release/$(PLATFORM):
	$(Q)cargo xbuild $(VERBOSE) --release
	$(Q)$(SIZE) $@

.PHONY: target/$(TARGET)/debug/$(PLATFORM)
target/$(TARGET)/debug/$(PLATFORM):
	$(Q)cargo xbuild $(VERBOSE)
	$(Q)$(SIZE) $@

check:
	$(Q)cargo check $(VERBOSE) --release

clean::
	$(Q)cargo clean $(VERBOSE)
